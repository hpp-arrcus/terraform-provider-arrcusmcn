---
swagger: "2.0"
info:
  description: Arrcus Orchestrator
  title: Arc Orch
  version: 1.0.0
consumes: [application/json]
produces: [application/json]
schemes:
  - http
basePath: /api/v1
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
  GcpApiKeyAuth:
    type: apiKey
    in: header
    name: X-Goog-IAP-JWT-Assertion
  ArcOrchApiKey:
    type: apiKey
    name: ArcOrchApiKey
    in: header
paths:
  /login:
    post:
      description: "Returns token for authorized User"
      tags: [users]
      operationId: Login
      consumes:
        - "application/json"
      parameters:
        - name: "login"
          in: "body"
          required: true
          description: "Login Payload"
          schema:
            $ref: "#/definitions/login_request"
        - name: tenant
          in: query
          required: true
          type: string
      responses:
        200:
          description: Successful login
          schema:
            $ref: "#/definitions/login_response"
        302:
          description: "Redirect to saml login"
          headers:
            location:
              type: "string"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /passwords:
    post:
      description: "Change password for an authorized User"
      tags: [password]
      operationId: Change
      consumes:
        - "application/json"
      parameters:
        - name: "changerequest"
          in: "body"
          required: true
          description: "Password change Payload"
          schema:
            $ref: "#/definitions/password_change_request"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Successful login
          schema:
            $ref: "#/definitions/password_change_response"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /saml/enabled:
    get:
      description: "Check if saml enabled for certain tenant"
      tags: [saml]
      operationId: samlenabled
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      responses:
        200:
          description: Saml state
          schema:
            $ref: "#/definitions/saml_config"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /saml/conf:
    get:
      tags: [saml]
      operationId: getSamlConf
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Saml configuration
          schema:
            $ref: "#/definitions/saml_config"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    put:
      tags: [saml]
      operationId: editSamlConf
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: samlconf
          in: body
          required: true
          schema:
            $ref: "#/definitions/saml_config"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/saml_config"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /saml/login:
    get:
      description: "Returns token for authorized User"
      tags: [saml]
      operationId: samllogin
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      responses:
        200:
          description: Successful login
          schema:
            $ref: "#/definitions/login_response"
        302:
          description: "Redirect to login"
          headers:
            location:
              type: "string"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /saml/acs/{tenant}:
    post:
      tags: [saml]
      operationId: samlacs
      parameters:
        - name: tenant
          in: path
          required: true
          type: string
        - name: acs
          in: body
          schema:
            $ref: "#/definitions/tenant"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /tenants/:
    post:
      tags: [tenants]
      operationId: createTenant
      parameters:
        - name: tenant
          in: body
          schema:
            $ref: "#/definitions/tenant"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/tenant"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [tenants]
      operationId: listTenants
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the all the tenants
          schema:
            type: array
            items:
              $ref: "#/definitions/tenant"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /tenants/{name}:
    get:
      tags: [tenants]
      operationId: describeTenants
      parameters:
        - name: name
          in: path
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/tenant"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [tenants]
      operationId: deleteTenant
      parameters:
        - name: name
          in: path
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: Deleted
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /tenants/{name}/samlconf:
    put:
      tags: [tenants]
      operationId: editSamlConfForTenants
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: samlconf
          in: body
          required: true
          schema:
            $ref: "#/definitions/saml_config"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/tenant"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/saml:
    post:
      description: "Create or update roles for users whose tenant has saml enabled"
      tags: [users]
      operationId: setSamlUserRole
      consumes:
        - "application/json"
      parameters:
        - name: user
          in: body
          required: true
          description: "User and role list"
          schema:
            $ref: "#/definitions/saml_users"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Successful creation or edition
          schema:
            $ref: "#/definitions/saml_users_resp"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/:
    post:
      description: "Create a new user"
      tags: [users]
      operationId: createUser
      consumes:
        - "application/json"
      parameters:
        - name: user
          in: body
          required: true
          description: "Registration payload"
          schema:
            $ref: "#/definitions/user"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Successful registration
          schema:
            $ref: "#/definitions/user"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [users]
      operationId: listUsers
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list the all the users
          schema:
            type: array
            items:
              $ref: "#/definitions/user"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /users/{name}:
    put:
      tags: [users]
      operationId: updateUser
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: user
          in: body
          schema:
            $ref: "#/definitions/user"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [users]
      operationId: describeUsers
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/user"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [users]
      operationId: deleteUser
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: Deleted
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/{name}/arcorchapikey/:
    get:
      tags: [users]
      operationId: listAOApiKey
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/arc_orch_api_key_response"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [users]
      operationId: createAOApiKey
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: apikey
          in: body
          required: true
          schema:
            $ref: "#/definitions/arc_orch_api_key_request"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/arc_orch_api_key_response"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /users/{name}/arcorchapikey/{keyname}:
    delete:
      tags: [users]
      operationId: deleteAOApiKey
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: keyname
          in: path
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /certificates:
    get:
      tags: [certificates]
      operationId: listCertificates
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: List the certificates
          schema:
            type: array
            items:
              $ref: "#/definitions/certificates"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [certificates]
      operationId: createCertificates
      parameters:
        - name: certificates
          in: body
          required: true
          schema:
            $ref: "#/definitions/certificates"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        201:
          description: Create a new certificate
          schema:
            $ref: "#/definitions/certificates"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /certificates/{name}:
    put:
      tags: [certificates]
      operationId: updateCertificates
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: certificates
          in: body
          schema:
            $ref: "#/definitions/certificates"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/certificates"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [certificates]
      operationId: describeCertificates
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Describe a single certificate
          schema:
            $ref: "#/definitions/certificates"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [certificates]
      operationId: deleteCertificates
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: Deleted certificate
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /dns/aws:
    get:
      tags: [dns]
      operationId: listDnsAws
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: List the Domain Names
          schema:
            type: array
            items:
              $ref: "#/definitions/dns"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /dns/aws/arecord:
    get:
      tags: [dns]
      operationId: listARecords
      parameters:
        - name: HostedZoneID
          in: query
          type: string
          required: true
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: List the Domain Names
          schema:
            type: array
            items:
              $ref: "#/definitions/arecord"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /dns:
    get:
      tags: [dns]
      operationId: listDns
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: List the Domain Names
          schema:
            type: array
            items:
              $ref: "#/definitions/dns"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [dns]
      operationId: createDns
      parameters:
        - name: dns
          in: body
          required: true
          schema:
            $ref: "#/definitions/dns"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        201:
          description: Create a new DNS
          schema:
            $ref: "#/definitions/dns"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /dns/{name}:
    put:
      tags: [dns]
      operationId: updateDns
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: dns
          in: body
          schema:
            $ref: "#/definitions/dns"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/dns"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [dns]
      operationId: describeDns
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Describe a single DNS
          schema:
            $ref: "#/definitions/dns"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [dns]
      operationId: deleteDns
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: Deleted DNS
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /arcedge_credentials:
    get:
      tags: [arcedgecredentials]
      operationId: listArcEdgeCredentials
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 1
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: List the ArcEdge Credentials
          schema:
            type: array
            items:
              $ref: "#/definitions/arcedgecredentials"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [arcedgecredentials]
      operationId: createArcEdgeCredentials
      parameters:
        - name: arcedgecredentials
          in: body
          required: true
          schema:
            $ref: "#/definitions/arcedgecredentials"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        201:
          description: Create a new ArcEdge Credential
          schema:
            $ref: "#/definitions/arcedgecredentials"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /arcedge_credentials/{name}:
    put:
      tags: [arcedgecredentials]
      operationId: updateArcEdgeCredentials
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: arcedgecredentials
          in: body
          schema:
            $ref: "#/definitions/arcedgecredentials"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/arcedgecredentials"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [arcedgecredentials]
      operationId: describeArcEdgeCredentials
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Describe a single ArcEdge Credential
          schema:
            $ref: "#/definitions/arcedgecredentials"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [arcedgecredentials]
      operationId: deleteArcEdgeCredentials
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: Deleted credential
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /connections:
    get:
      tags: [connections]
      operationId: listConnections
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list the connections
          schema:
            type: array
            items:
              $ref: "#/definitions/connections"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [connections]
      operationId: createConnections
      parameters:
        - name: connections
          in: body
          required: true
          schema:
            $ref: "#/definitions/connections"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        201:
          description: Create a new connection
          schema:
            $ref: "#/definitions/connections"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /connections/{name}:
    put:
      tags: [connections]
      operationId: updateConnections
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: connections
          in: body
          schema:
            $ref: "#/definitions/connections"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/connections"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [connections]
      operationId: describeConnections
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Describe a single connection
          schema:
            $ref: "#/definitions/connections"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [connections]
      operationId: deleteConnections
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: Deleted connection
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials:
    get:
      tags: [credentials]
      operationId: listCredentials
      parameters:
        - name: provider
          in: query
          type: string
          description: "Provider"
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list the cloud credentials accounts
          schema:
            type: array
            items:
              $ref: "#/definitions/credentials"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [credentials]
      operationId: createCredentials
      parameters:
        - name: credentials
          in: body
          required: true
          schema:
            $ref: "#/definitions/credentials"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        201:
          description: Create a new cloud credential
          schema:
            $ref: "#/definitions/credentials"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/{name}:
    put:
      tags: [credentials]
      operationId: updateCredentials
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: credentials
          in: body
          schema:
            $ref: "#/definitions/credentials"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/credentials"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [credentials]
      operationId: describeCredentials
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Describe a single cloud account credential
          schema:
            $ref: "#/definitions/credentials"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [credentials]
      operationId: deleteCredentials
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: Deleted cloud account credential
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /arcedge_images:
    get:
      tags: [deployments]
      operationId: getArcEdgeImages
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: cloudAcctName
          in: query
          required: true
          type: string
        - name: region
          in: query
          required: true
          type: string
        - name: compartment
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the Arc Edge Images
          schema:
            type: array
            items:
              $ref: "#/definitions/arcedge_image"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /deployments:
    get:
      tags: [deployments]
      operationId: listDeployments
      parameters:
        - name: provider
          in: query
          type: string
          description: "Provider"
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list the cloud deployments
          schema:
            type: array
            items:
              $ref: "#/definitions/deployment"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [deployments]
      operationId: createDeployments
      parameters:
        - name: deployments
          in: body
          required: true
          schema:
            $ref: "#/definitions/deployment"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/deployment"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/aws/byoips/{name}:
    get:
      tags: [credentials]
      operationId: getAwsByoips
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Get the unassociated Elastic IPs available in the region
          schema:
            type: array
            items:
              $ref: "#/definitions/byoip"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/aws/vpcs/{name}:
    get:
      tags: [credentials]
      operationId: getAwsVpc
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the VPCs by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/vpc"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/aws/keys/{name}:
    get:
      tags: [credentials]
      operationId: getAwsKeys
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/aws/subnets/{name}:
    get:
      tags: [credentials]
      operationId: getAwsSubnets
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: vpc_id
          in: query
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the subnets by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/subnet"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/aws/instance_types/{name}:
    get:
      tags: [credentials]
      operationId: getAwsInstanceTypes
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/aws_instance_type"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/aws/regions/{name}:
    get:
      tags: [credentials]
      operationId: getAwsRegions
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the regions by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /cloud_credentials/aws/zones/{name}:
    get:
      tags: [credentials]
      operationId: getAwsZones
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: region
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the regions by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /cloud_credentials/aws/arcedgeimages/{name}:
    get:
      tags: [credentials]
      operationId: getAwsImages
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: region
          in: query
          type: string
          required: true
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the image by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/arcedge_image"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/keys/{name}:
    get:
      tags: [credentials]
      operationId: getAzureKeys
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/virtual_networks/{name}:
    get:
      tags: [credentials]
      operationId: getAzureVNet
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: resource_group
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the virtual network by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/byoips/{name}:
    get:
      tags: [credentials]
      operationId: getAzureByoips
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: resource_group
          in: query
          type: string
          required: true
        - name: region
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of unassociated Elastic IP's available
          schema:
            type: array
            items:
              $ref: "#/definitions/byoip"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/resource_groups/{name}:
    get:
      tags: [credentials]
      operationId: getAzureResourceGroup
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: region
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the resource group by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/subnets/{name}:
    get:
      tags: [credentials]
      operationId: getAzureSubnets
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: resource_group
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: virtual_network
          in: query
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the subnets by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/instance_types/{name}:
    get:
      tags: [credentials]
      operationId: getAzureInstanceTypes
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/azure_instance_type"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/regions/{name}:
    get:
      tags: [credentials]
      operationId: getAzureRegions
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the regions by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/zones/{name}:
    get:
      tags: [credentials]
      operationId: getAzureZones
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: region
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the regions by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/azure/arcedgeimages/{name}:
    get:
      tags: [credentials]
      operationId: getAzureImages
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: region
          in: query
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the image by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/arcedge_image"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/gcp/projects/{name}:
    get:
      tags: [credentials]
      operationId: getGcpProject
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the GCP Projects
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/gcp/subnets/{name}:
    get:
      tags: [credentials]
      operationId: getGcpSubnets
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: network
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the subnets by the cloud provider
          schema:
            $ref: "#/definitions/stringarraydict"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/gcp/projectsubnets/{name}:
    get:
      tags: [credentials]
      operationId: getGcpProjectSubnets
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: network
          in: query
          type: string
          required: true
        - name: project
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the subnets in a network for a project in gcp
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /cloud_credentials/gcp/byoips/{name}:
    get:
      tags: [credentials]
      operationId: getGcpByoips
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the reserved IPs by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/byoip"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/gcp/networks/{name}:
    get:
      tags: [credentials]
      operationId: getGcpNetworks
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the networks by the cloud provider
          schema:
            $ref: "#/definitions/stringarraydict"

        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/gcp/instance_types/{name}:
    get:
      tags: [credentials]
      operationId: getGcpInstanceTypes
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: zone
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the instance types by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/gcp_instance_type"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/gcp/regions/{name}:
    get:
      tags: [credentials]
      operationId: getGcpRegions
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the regions by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/gcp/zones/{name}:
    get:
      tags: [credentials]
      operationId: getGcpZones
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: region
          in: query
          type: string
          required: true
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/gcp/arcedgeimages/{name}:
    get:
      tags: [credentials]
      operationId: getGcpImages
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the image by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/arcedge_image"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/oci/compartments/{name}:
    get:
      tags: [credentials]
      operationId: getOciCompartments
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/oci_compartment"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/oci/regions/{name}:
    get:
      tags: [credentials]
      operationId: getOciRegions
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: compartment
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/oci/availabilitydomains/{name}:
    get:
      tags: [credentials]
      operationId: getOciAvailabilityDomains
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: compartment
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/oci_availability_domain"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/oci/vcns/{name}:
    get:
      tags: [credentials]
      operationId: getOciVcns
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: compartment
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/oci_virtual_network"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/oci/subnets/{name}:
    get:
      tags: [credentials]
      operationId: getOciSubnets
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: compartment
          in: query
          required: true
          type: string
        - name: vcn
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/oci_network"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/oci/shapes/{name}:
    get:
      tags: [credentials]
      operationId: getOciComputeShapes
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: compartment
          in: query
          required: true
          type: string
        - name: image_ocid
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/oci_compute_shape"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/oci/byoips/{name}:
    get:
      tags: [credentials]
      operationId: getOciByoips
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: compartment
          in: query
          required: true
          type: string
        - name: domain
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/onpremise/arcedgeimages/{name}:
    get:
      tags: [credentials]
      operationId: getOnpremImages
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the image by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/arcedge_image"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/onpremise/data_if_names/{name}:
    get:
      tags: [credentials]
      operationId: getOnpremIfName
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the data interface name by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/onpremise/domains:
    get:
      tags: [credentials]
      operationId: getOnpremDomain
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the domains from all on premise credentials
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/vsphere/datacenters/{name}:
    get:
      tags: [credentials]
      operationId: getVsphereDatacenters
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the datacenter by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/vsphere/hosts/{name}:
    get:
      tags: [credentials]
      operationId: getVsphereHosts
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: datacenter
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the host in the datacenter by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/vsphere/datastores/{name}:
    get:
      tags: [credentials]
      operationId: getVsphereDatastores
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: datacenter
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the datastore in the datacenter by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/vsphere/clusters/{name}:
    get:
      tags: [credentials]
      operationId: getVsphereClusters
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: datacenter
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the cluster in the datacenter by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/oci/arcedgeimages/{name}:
    get:
      tags: [credentials]
      operationId: getOciArcedgeImages
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: compartment
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list of the zones by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/arcedge_image"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/vsphere/networks/{name}:
    get:
      tags: [credentials]
      operationId: getVsphereNetworks
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: datacenter
          in: query
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the network in the datacenter by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/vsphere/physicalfunctions/{name}:
    get:
      tags: [credentials]
      operationId: getVspherePhyFunctions
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: host
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the network in the datacenter by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/vsphere_physical_function"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/vsphere/contentlibraries/{name}:
    get:
      tags: [credentials]
      operationId: getVsphereContentlibraries
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the content library by the cloud provider
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /cloud_credentials/vsphere/arcedgeimages/{name}:
    get:
      tags: [credentials]
      operationId: getVsphereImages
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: contentlibrary
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list of the image in the content library by the cloud provider
          schema:
            type: array
            items:
              $ref: "#/definitions/arcedge_image"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /deployments/{name}:
    put:
      tags: [deployments]
      operationId: updateDeployments
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: deployments
          in: body
          schema:
            $ref: "#/definitions/deployment"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/deployment"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [deployments]
      operationId: describeDeployments
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Describe a single cloud deployment
          schema:
            $ref: "#/definitions/deployment"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [deployments]
      operationId: deleteDeployments
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: Deleted cloud deployment
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /deployments/{name}/logs:
    get:
      tags: [deployments]
      operationId: listLogs
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: list the all the terraform logs of given deployment
          schema:
            type: array
            items:
              $ref: "#/definitions/terraform_log"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /deployments/{name}/tfstate:
    get:
      tags: [deployments]
      produces:
        - text/plain
      operationId: DownloadDeploymentTfState
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /deployments/checkForUpgrades:
    put:
      tags: [deployments]
      operationId: checkForUpgrades
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        204:
          description: check for upgrades for all deployments in a tenant
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /deployments/{name}/upgradeAvailable:
    get:
      tags: [deployments]
      operationId: deploymentUpgradeCheck
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: check if upgrade is available
          schema:
            $ref: "#/definitions/arcedge_upgrade_available_response"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /deployments/{name}/upgrade:
    put:
      tags: [deployments]
      operationId: deploymentUpgrade
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: upgrade deployment
          schema:
            $ref: "#/definitions/arcedge_upgrade_response"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /upgrade:
    put:
      tags: [maintenance]
      operationId: upgrade
      parameters: []
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/upgrade"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /upgrade/cancel:
    put:
      tags: [maintenance]
      operationId: upgradeCancel
      parameters: []
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /upgrade/available:
    get:
      tags: [maintenance]
      operationId: upgradeAvailable
      parameters: []
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/upgrade_check"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /backup/config:
    get:
      tags: [maintenance]
      operationId: getBackupConfig
      parameters: []
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/backup_config"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [maintenance]
      operationId: setBackupConfig
      parameters:
        - name: "backupConfig"
          in: "body"
          required: true
          description: "Backup Configuration"
          schema:
            $ref: "#/definitions/backup_config"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Backup Config Saved Successfully
          schema:
            $ref: "#/definitions/backup_config"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /backup/now:
    put:
      tags: [maintenance]
      operationId: backupNow
      parameters: []
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/restore_config"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /restore:
    post:
      tags: [maintenance]
      operationId: restoreSnapshot
      consumes:
        - "application/json"
      parameters:
        - name: "restoreConfig"
          in: "body"
          required: true
          description: "Restore Configuration"
          schema:
            $ref: "#/definitions/restore_config"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Restored snapshot successfully
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /ttyd:
    get:
      tags: [ttyd]
      operationId: ttyd
      parameters:
        - name: name
          in: query
          required: true
          type: string
        - name: index
          in: query
          required: true
          type: number
        - name: token
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: UI console
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /ttyd/token:
    get:
      tags: [ttyd]
      operationId: ttydtoken
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: ttyd token
          schema:
            type: object
            properties:
              token:
                type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /ttyd/ws:
    get:
      tags: [ttyd]
      operationId: ttydws
      parameters:
        - name: name
          in: query
          required: true
          type: string
        - name: index
          in: query
          required: true
          type: number
        - name: tenant
          in: query
          required: true
          type: string
        - name: token
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: ttyd websocket
          schema:
            type: object
            properties:
              token:
                type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /status:
    get:
      tags: [status]
      operationId: getStatus
      responses:
        200:
          description: UI console
          schema:
            $ref: "#/definitions/server_status"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /version:
    get:
      description: "Returns version of ArcOrchestrator"
      tags: [version]
      operationId: getVersion
      responses:
        200:
          description: Version of ArcOrchestrator
          schema:
            $ref: "#/definitions/arcorch_version"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cloud-resources/{id}:
    get:
      tags: [cloudresources]
      operationId: getCloudResourcesState
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: refresh
          in: query
          type: boolean
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/cloud_resources_output"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [cloudresources]
      operationId: provisionCloudResources
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: "cloudResourcesConfig"
          in: "body"
          required: true
          description: "Cloud Resources Configuration"
          schema:
            $ref: "#/definitions/cloud_resources"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Cloud Resources provisioned Successfully
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    put:
      tags: [cloudresources]
      operationId: updateCloudResources
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: force_run
          in: query
          type: boolean
        - name: "cloudResourcesConfig"
          in: "body"
          required: true
          description: "Cloud Resources Configuration"
          schema:
            $ref: "#/definitions/cloud_resources"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: Cloud Resources provisioned Successfully
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [cloudresources]
      operationId: deleteCloudResources
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: purge_data
          in: query
          type: boolean
        - name: force_purge
          in: query
          type: boolean
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cloud-resources/{id}/data/{resource}:
    get:
      tags: [cloudresources]
      produces:
        - text/plain
      operationId: downloadCloudResourcesData
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: resource
          in: path
          required: true
          type: string
          enum: [log, tfstate]
          description: "Resource type"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /cloud-resources:
    get:
      tags: [cloudresources]
      operationId: listCloudResourcesState
      parameters:
        - name: provider
          in: query
          type: string
          description: "Provider"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []

      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/cloud_resources_output"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /gateway/arcedge/{deployment}/{index}:
    get:
      tags: [arcedgegateway]
      operationId: show
      parameters:
        - name: deployment
          in: path
          type: string
          required: true
          description: name of arcedge deployment
        - name: tenant
          in: query
          type: string
          required: true
        - name: aepath
          in: query
          type: string
          format: path
          required: true
          description: arcedge api path
        - name: index
          in: path
          type: number
          required: true
          description: index of arcedge in deployment
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    patch:
      tags: [arcedgegateway]
      operationId: config
      parameters:
        - name: deployment
          in: path
          type: string
          required: true
          description: name of arcedge deployment
        - name: tenant
          in: query
          type: string
          required: true
        - name: aepath
          in: query
          type: string
          format: path
          required: true
          description: arcedge api path
        - name: index
          in: path
          type: number
          required: true
          description: index of arcedge in deployment
        - name: data
          in: body
          schema:
            type: object
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    post:
      tags: [arcedgegateway]
      operationId: exec
      parameters:
        - name: deployment
          in: path
          type: string
          required: true
          description: name of arcedge deployment
        - name: tenant
          in: query
          type: string
          required: true
        - name: aepath
          in: query
          type: string
          format: path
          required: true
          description: arcedge api path
        - name: index
          in: path
          type: number
          required: true
          description: index of arcedge in deployment
        - name: data
          in: body
          schema:
            type: object
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [arcedgegateway]
      operationId: unconfig
      parameters:
        - name: deployment
          in: path
          type: string
          required: true
          description: name of arcedge deployment
        - name: tenant
          in: query
          type: string
          required: true
        - name: aepath
          in: query
          type: string
          format: path
          required: true
          description: arcedge api path
        - name: index
          in: path
          type: number
          required: true
          description: index of arcedge in deployment
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /fqdnlist/:
    post:
      description: "Create a new list of fqdns"
      tags: [fqdnlist]
      operationId: createFqdnlist
      consumes:
        - "application/json"
      parameters:
        - name: fqdnlist
          in: body
          required: true
          description: "Registration payload"
          schema:
            $ref: "#/definitions/fqdnlist"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Successful registration
          schema:
            $ref: "#/definitions/fqdnlist"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [fqdnlist]
      operationId: listFqdnlists
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the all fqdnlist's
          schema:
            type: array
            items:
              $ref: "#/definitions/fqdnlist"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /fqdnlist/{name}:
    put:
      tags: [fqdnlist]
      operationId: updateFqdnlist
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: fqdnlist
          in: body
          schema:
            $ref: "#/definitions/fqdnlist"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/fqdnlist"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [fqdnlist]
      operationId: describeFqdnlist
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/fqdnlist"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [fqdnlist]
      operationId: deleteFqdnlist
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: Deleted
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /activefqdnlists/:
    post:
      description: "Create a new set of Active fqdn lists to apply"
      tags: [activefqdnlists]
      operationId: createActivefqdnlists
      consumes:
        - "application/json"
      parameters:
        - name: fqdnlistnames
          in: body
          required: true
          description: "Registration payload"
          schema:
            $ref: "#/definitions/activefqdnlists"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Successful registration
          schema:
            $ref: "#/definitions/activefqdnlists"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    put:
      description: "Create a new set of Active fqdn lists to apply"
      tags: [activefqdnlists]
      operationId: updateActivefqdnlists
      consumes:
        - "application/json"
      parameters:
        - name: fqdnlistnames
          in: body
          required: true
          description: "Registration payload"
          schema:
            $ref: "#/definitions/activefqdnlists"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Successful registration
          schema:
            $ref: "#/definitions/activefqdnlists"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [activefqdnlists]
      operationId: listActivefqdnlists
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the all active fqdnlist names
          schema:
            $ref: "#/definitions/activefqdnlists"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /trusteddns/:
    post:
      description: "Create a list of trusted dns servers to bypass egressfqdn filter"
      tags: [trusteddns]
      operationId: createTrusteddns
      consumes:
        - "application/json"
      parameters:
        - name: dnslist
          in: body
          required: true
          description: "Registration payload"
          schema:
            $ref: "#/definitions/dnslist"
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Successful registration
          schema:
            $ref: "#/definitions/dnslist"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [trusteddns]
      operationId: listTrusteddns
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list all trusted dns
          schema:
            type: array
            items:
              $ref: "#/definitions/dnslist"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /trusteddns/{name}:
    put:
      tags: [trusteddns]
      operationId: updateTrusteddns
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
        - name: dnslist
          in: body
          schema:
            $ref: "#/definitions/dnslist"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/dnslist"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags: [trusteddns]
      operationId: describeTrusteddns
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/dnslist"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      description: "remove the list of dns servers to bypass egressfqdn filter"
      tags: [trusteddns]
      operationId: deleteTrusteddns
      consumes:
        - "application/json"
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: Deleted
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /discoveredfqdns/:
    get:
      tags: [discoveredfqdns]
      operationId: listDiscoveredfqdns
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: all discovered fqdns accross all gatways
          schema:
            type: array
            items:
              $ref: "#/definitions/discoveredfqdns"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [discoveredfqdns]
      operationId: deleteDiscoveredfqdns
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: deleted all discovered fqdns accross all gateways
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /discoveredfqdns/{name}:
    get:
      tags: [discoveredfqdns]
      operationId: listGatewayDiscoveredfqdns
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the all discovered fqdns for gateway ip
          schema:
            $ref: "#/definitions/discoveredfqdns"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    delete:
      tags: [discoveredfqdns]
      operationId: deleteGatewayDiscoveredfqdns
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: deleted all discovered fqdns for the gateway
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /fqdndiscovery/:
    post:
      description: "Start discovery of fqdns on the gateway"
      tags: [fqdndiscovery]
      operationId: startFqdndiscovery
      consumes:
        - "application/json"
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Fqdn Discovery Started
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      description: "Stop discovery of fqdns on the gateway"
      tags: [fqdndiscovery]
      operationId: stopFqdndiscovery
      consumes:
        - "application/json"
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: Fqdn Discovery Stopped
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      description: "Get current fqdndiscovery configuration on the gateway"
      tags: [fqdndiscovery]
      operationId: getFqdnDiscovery
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: current fqdndiscovery configuration on the gateway
          schema:
            $ref: "#/definitions/booleantype"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /zerotrust/:
    post:
      description: "Enable zerotrust on the gateway"
      tags: [zerotrust]
      operationId: enableZeroTrust
      consumes:
        - "application/json"
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Zerotrust enabled
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    delete:
      description: "Disable zerotrust on the gateway"
      tags: [zerotrust]
      operationId: disableZeroTrust
      consumes:
        - "application/json"
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: Zerotrust disabled
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      description: "Get current zerotrust configuration on the gateway"
      tags: [zerotrust]
      operationId: getZeroTrust
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: current zerotrust configuration on the gateway
          schema:
            $ref: "#/definitions/booleantype"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /tenantdashboard/:
    get:
      tags: [tenantdashboard]
      operationId: gettenantdashboard
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Per tenant dashboard
          schema:
            $ref: "#/definitions/tenantdashboard"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /globaldashboard/:
    get:
      tags: [globaldashboard]
      operationId: getglobaldashboard
      parameters:
        - name: limit
          in: query
          type: integer
          format: int32
          default: 100
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Per tenant dashboard
          schema:
            $ref: "#/definitions/globaldashboard"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /auditlogs/:
    get:
      description: "get audit logs"
      tags: [auditlogs]
      operationId: getAuditLogs
      parameters:
        - name: lastId
          in: query
          type: string
        - name: limit
          in: query
          type: integer
          default: 0
        - name: skip
          in: query
          type: integer
          default: 0
        - name: username
          in: query
          type: string
        - name: resource
          in: query
          type: string
        - name: operation
          in: query
          type: string
        - name: status
          in: query
          type: string
          enum: [success, failed]
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the audit events
          schema:
            type: array
            items:
              $ref: "#/definitions/audit_event"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /allauditlogs/:
    get:
      description: "get all audit logs"
      tags: [auditlogs]
      operationId: getAuditLogsAll
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list all audit events
          schema:
            type: array
            items:
              $ref: "#/definitions/audit_event"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"

  /allauditnum/:
    get:
      description: "get total log count"
      tags: [auditlogs]
      operationId: getAuditLogsNum
      parameters:
        - name: username
          in: query
          type: string
        - name: resource
          in: query
          type: string
        - name: operation
          in: query
          type: string
        - name: status
          in: query
          type: string
          enum: [success, failed]
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: total number of audit events
          schema:
            type: integer
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  # ArcCost microservice APIs - BEGIN
  /costcontrols/:
    post:
      description: "Create Cost control objects to be monitored"
      tags: [arccost]
      operationId: createArcCostControl
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: costcontroldata
          in: body
          schema:
            $ref: "#/definitions/arc_cost_costcontrol_request"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: ArcCost control created
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    put:
      description: "Update Cost control objects to be monitored"
      tags: [arccost]
      operationId: updateArcCostControl
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: costcontroldata
          in: body
          schema:
            $ref: "#/definitions/arc_cost_costcontrol_request"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: ArcCost control updated
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

    delete:
      description: "Delete Cost control object"
      tags: [arccost]
      operationId: deleteArcCostControl
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: ArcCost control object deleted
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    get:
      description: "All cost control objects"
      tags: [arccost]
      operationId: allArcCostControl
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: All Arccost control configured for the tenant
          schema:
            type: array
            items:
              $ref: "#/definitions/arc_cost_costcontrol_request"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /arccostdevices/:
    post:
      description: "Get All devices from ArcCost microservice"
      tags: [arccost]
      operationId: getDevices
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: current set of devices from arccost
          schema:
            type: array
            items:
              $ref: "#/definitions/arc_cost_device"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /arccostvisibility/:
    post:
      description: "Get device visibility interms of network and compute"
      tags: [arccost]
      operationId: getvisibility
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: deployments
          in: body
          schema:
            $ref: "#/definitions/arc_cost_visibility_request"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: visibility for current set of devices from arccost
          schema:
            type: array
            items:
              $ref: "#/definitions/arc_cost_visibility_response"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /arccostusage/:
    post:
      description: "Get usage cost of devices"
      tags: [arccost]
      operationId: getUsage
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: deployments
          in: body
          schema:
            $ref: "#/definitions/arc_cost_usage_request"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: costs for current set of devices from arccost
          schema:
            type: array
            items:
              $ref: "#/definitions/arc_cost_usage_response"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /arccostusagehourly/:
    post:
      description: "Get usage cost of devices in hourly chunks"
      tags: [arccost]
      operationId: getHourlyUsage
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: deployments
          in: body
          schema:
            $ref: "#/definitions/arc_cost_usage_request"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: costs for current set of devices from arccost in hourly chunks
          schema:
            type: array
            items:
              $ref: "#/definitions/arc_cost_usage_response"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /arccostlinks/:
    post:
      description: "Create Links for depicting cloud backbone or direct links to COLO provider etc "
      tags: [arccost]
      operationId: createArcCostLink
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: linkdata
          in: body
          schema:
            $ref: "#/definitions/arc_cost_link"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: ArcCost link created
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    get:
      description: "All Links"
      tags: [arccost]
      operationId: allArcCostLinks
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: All Arccost links configured for the tenant
          schema:
            type: array
            items:
              $ref: "#/definitions/arc_cost_link"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /arccostlinks/{name}:
    get:
      description: "Link by name"
      tags: [arccost]
      operationId: getArcCostLink
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Get Arccost link by name for the tenant
          schema:
            $ref: "#/definitions/arc_cost_link"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    put:
      description: "Update Links for depicting cloud backbone or direct links to COLO provider etc"
      tags: [arccost]
      operationId: updateArcCostLink
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
        - name: linkdata
          in: body
          schema:
            $ref: "#/definitions/arc_cost_linkdata"
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: ArcCost link updated
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    delete:
      description: "Delete Link"
      tags: [arccost]
      operationId: deleteArcCostLink
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: ArcCost Link  deleted
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /arccostlinks/deployments/:
    put: #it is a put request because get cannot have body
      description: "All Links"
      tags: [arccost]
      operationId: getArcCostLinksInDeployment
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: deployments
          in: body
          required: true
          schema:
            type: array
            items:
              type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: All Arccost links configured for the tenant
          schema:
            type: array
            items:
              $ref: "#/definitions/arc_cost_link"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
          schema:
            $ref: "#/definitions/error"
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

  /providers/legacy/:
    get:
      tags: [providers]
      operationId: getLegacyProviders
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the public cloud providers supported by arcorchestrator old style (Deprecated)
          schema:
            type: array
            items:
              $ref: '#/definitions/Providers'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

#tunnels and ipsec
  /deployments/{deploymentname}/{arcedge}/tunnels/{name}:
    post:
      description: 'Create Tunnel interface '
      tags: [tunnel]
      operationId: createTunnel
      consumes:
        - 'application/json'
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          description: 'Tunnel name'
          type: string
        - name: arcedge
          in: path
          required: true
          description: 'active/standby arcedge '
          type: string
        - name: deploymentname
          in: path
          required: true
          description: 'Deployment name'
          type: string
        - name: tunnel
          in: body
          description: 'Tunnel object'
          schema:
            $ref: '#/definitions/tunnel_interface'

      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Tunnel interface created
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      description: 'Delete Tunnel interface'
      tags: [tunnel]
      operationId: deleteTunnel
      consumes:
        - 'application/json'
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          description: 'Tunnel name'
          type: string
        - name: arcedge
          in: path
          required: true
          description: 'active/standby arcedge '
          type: string
        - name: deploymentname
          in: path
          required: true
          description: 'Deployment name'
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: Tunnel Deleted
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'

  /deployments/{deploymentname}/{arcedge}/ipsec/pads/{name}:
    post:
      description: 'Create IPSEC Pad'
      tags: [ipsec]
      operationId: createIpsecPad
      consumes:
        - 'application/json'
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          description: 'Ipsec Pad name'
          type: string
        - name: arcedge
          in: path
          required: true
          description: 'active/standby arcedge '
          type: string
        - name: deploymentname
          in: path
          required: true
          description: 'Deployment name'
          type: string
        - name: ipsecpad
          in: body
          description: 'IPsecPad object'
          schema:
            $ref: '#/definitions/ipsec_pad'

      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: IPSEC Pad created
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      description: 'Delete IPSEC Pad'
      tags: [ipsec]
      operationId: deleteIpsecPad
      consumes:
        - 'application/json'
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          description: 'Ipsec pad name'
          type: string
        - name: arcedge
          in: path
          required: true
          description: 'active/standby arcedge '
          type: string
        - name: deploymentname
          in: path
          required: true
          description: 'Deployment name'
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: IPSEC Pad deleted
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'

  /deployments/{deploymentname}/{arcedge}/ipsec/conn/{name}:
    post:
      description: 'Create IPSEC Conn'
      tags: [ipsec]
      operationId: createIpsecConn
      consumes:
        - 'application/json'
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          description: 'Pad name'
          type: string
        - name: arcedge
          in: path
          required: true
          description: 'active/standby arcedge '
          type: string
        - name: deploymentname
          in: path
          required: true
          description: 'Deployment name'
          type: string
        - name: ipsecconn
          in: body
          description: 'IPsecConn object'
          schema:
            $ref: '#/definitions/ipsec_conn'

      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: IPSEC Conn created
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'
    delete:
      description: 'Delete IPSEC Conn'
      tags: [ipsec]
      operationId: deleteIpsecConn
      consumes:
        - 'application/json'
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: name
          in: path
          required: true
          description: 'IPSEC Conn name'
          type: string
        - name: arcedge
          in: path
          required: true
          description: 'active/standby arcedge '
          type: string
        - name: deploymentname
          in: path
          required: true
          description: 'Deployment name'
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        204:
          description: IPSEC Conn deleted
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: error
          schema:
            $ref: '#/definitions/error'


  /providers/csp/:
    get:
      tags: [providers]
      operationId: getPublicCloudProviders
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the public cloud providers supported by arcorchestrator
          schema:
            type: array
            items:
              $ref: '#/definitions/Csps'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /providers/csp/{cspname}/regions/{regionname}/coordinates:
    get:
      tags: [providers]
      operationId: getArccostCspRegionCoordinates
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: cspname
          in: path
          required: true
          type: string
        - name: regionname
          in: path
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Get Coordinates in long,lat for the cspregion 
          schema:
            $ref: '#/definitions/arc_cost_region_coordinates'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

  /providers/arccostcsp/:
    get:
      tags: [providers]
      operationId: getECCPublicCloudProviders
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the public cloud providers supported by arccost
          schema:
            type: array
            items:
              $ref: '#/definitions/ArcCostCsps'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /providers/arccostcsp/{cspname}/regions/:
    get:
      tags: [providers]
      operationId: getArccostCspRegions
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: cspname
          in: path
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Get all regions supported by the csp 
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'


  /providers/colo/:
    get:
      tags: [providers]
      operationId: getColoProviders
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list the colo providers supported for the tenant
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    post:
      tags: [providers]
      operationId: createColoProviders
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: coloproviders
          in: body
          required: true
          schema: 
            type: array
            items:
              type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: create all colo providers for the tenant
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    put:
      tags: [providers]
      operationId: updateColoProviders
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: coloproviders
          in: body
          required: true
          schema: 
            type: array
            items:
              type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: update all colo providers for the tenant
          schema:
            type: array
            items:
              type: string
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /hypervisors/:
    get:
      tags: [providers]
      operationId: getHypervisors
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: list hypervisor technologies supported  by AO
          schema:
            type: array
            items:
              $ref: '#/definitions/Hypervisors'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'


  /providers/colo/{coloname}/costs/:            
    post:
      tags: [providers]
      operationId: createColoproviderCost
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: coloname
          in: path
          required: true
          type: string
        - name: costmatrix
          in: body
          required: true
          schema:
            $ref: '#/definitions/arc_costservice_costmatrix'
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: create colo provider costs for multicloud connectivity
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

    put:
      tags: [providers]
      operationId: updateColoproviderCost
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: coloname
          in: path
          required: true
          type: string
        - name: costmatrix
          in: body
          required: true
          schema:
            $ref: '#/definitions/arc_costservice_costmatrix'
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: update colo provider costs for multicloud connectivity
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

    delete:
      tags: [providers]
      operationId: deleteColoproviderCost
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: coloname
          in: path
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: delete colo provider costs for multicloud connectivity
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

    get:
      tags: [providers]
      operationId: getColoproviderCost
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: coloname
          in: path
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: get the current colo provider costs for multicloud connectivity
          schema:
            type: array
            items:
              $ref: '#/definitions/arc_costservice_costmatrix'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'


  /findpaths/:            
    post:
      tags: [findpath]
      operationId: findpaths
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: constraints
          in: body
          schema:
            $ref: '#/definitions/arc_costservice_paths_request'
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: create a colo provider for the tenant with all regions
          schema:
            type: array
            items:
              $ref: '#/definitions/arc_costservice_path'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

# ArcCost microservice APIs - END
  /configs/ao:
    post:
      tags: [config]
      operationId: configureAO
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: config
          in: body
          required: true
          schema:
            $ref: '#/definitions/arc_orch_config'
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Configured ArcOrch
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    put:
      tags: [config]
      operationId: reconfigureAO
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: config
          in: body
          required: true
          schema:
            $ref: '#/definitions/arc_orch_config'
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Reconfigured ArcOrch
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

    get:
      tags: [config]
      operationId: getAOConfig
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: get the current AO configuration
          schema:
            type: array
            items:
              $ref: '#/definitions/arc_orch_config'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

  /configs/tenant/:
    post:
      tags: [config]
      operationId: configureAOTenant
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: config
          in: body
          required: true
          schema:
            $ref: '#/definitions/arc_orch_tenant_config'
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Configured ArcOrch Tenant
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

    put:
      tags: [config]
      operationId: reconfigureAOTenant
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
        - name: config
          in: body
          required: true
          schema:
            $ref: '#/definitions/arc_orch_tenant_config'
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: Reconfigured ArcOrch
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

    get:
      tags: [config]
      operationId: getAOTenantConfig
      parameters:
        - name: tenant
          in: query
          required: true
          type: string
      security:
        - Bearer: []
        - ArcOrchApiKey: []
        - GcpApiKeyAuth: []
      responses:
        200:
          description: get the current AO configuration
          schema:
            type: array
            items:
              $ref: '#/definitions/arc_orch_tenant_status'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'

# Enable runtime configs on ArcOrch 


definitions:
  Operation:
    type: string
    enum: &Operation
      - Add
      - Update
      - Delete
  Status:
    type: string
    enum: &Status
      - NotRunning
      - InProgress
      - Success
      - Error
      - Failure
      - TimedOut
  TerraformOperation:
    type: string
    enum: &TerraformOperation
      - Create
      - Update
      - Delete
      - Show
      - Apply
      - Destroy
  Providers:
    type: string
    enum: &Providers
      - aws
      - gcp
      - azure
      - oci
      - onpremise
      - vsphere
  Csps:
    type: string
    enum: &Csps
      - aws
      - gcp
      - azure
      - oci
  Hypervisors:
    type: string
    enum: &Hypervisors
      - vsphere
      - kvm
  ArcCostCsps:
    type: string
    enum: &ArcCostCsps
      - aws
      - gcp
      - azure
  azure_vpn_type:
    type: string
    enum: &AZURE_VPN_TYPE_ENUM
      - "RouteBased"
      - "PolicyBased"
  azure_sku:
    type: string
    enum: &AZURE_SKU_ENUM
      - "Basic"
      - "Standard"
      - "HighPerformance"
      - "UltraPerformance"
      - "ErGw1AZ"
      - "ErGw2AZ"
      - "ErGw3AZ"
      - "VpnGw1"
      - "VpnGw2"
      - "VpnGw3"
      - "VpnGw4"
      - "VpnGw1AZ"
      - "VpnGw2AZ"
      - "VpnGw3AZ"
      - "VpnGw4AZ"
      - "VpnGw5AZVpnGw5"
  certificates:
    type: object
    required:
      - name
      - cert
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
        minLength: 1
      cert:
        type: string
        minLength: 1
  dns:
    type: object
    required:
      - name
      - domainname
      - zoneid
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
        minLength: 1
      domainname:
        type: string
        minLength: 1
      zoneid:
        type: string
        minLength: 1
      credential_id:
        type: string
  arecord:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      value:
        type: array
        items:
          type: string
  arcedgecredentials:
    type: object
    required:
      - username
      - password
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      username:
        type: string
        minLength: 1
      password:
        type: string
        minLength: 1
  connections:
    type: object
    required:
      - name
      - deployment1
      - deployment2
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
        minLength: 1
      deployment1:
        $ref: "#/definitions/components"
      deployment2:
        $ref: "#/definitions/components"
  components:
    type: object
    required:
      - deploymentname
      - type
    properties:
      deploymentid:
        type: string
      deploymentname:
        type: string
        minLength: 1
      type:
        $ref: "#/definitions/componentTypes"
  componentTypes:
    type: string
    enum: &componentTypes
      - HUB
      - SPOKE
      - HUB & SPOKE
  credentials:
    type: object
    required:
      - name
      - provider
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
        minLength: 1
      provider:
        $ref: "#/definitions/Providers"
      credentials:
        allOf:
          - $ref: "#/definitions/aws_credentials"
          - $ref: "#/definitions/azure_credentials"
          - $ref: "#/definitions/gcp_credentials"
          - $ref: "#/definitions/oci_credentials"
          - $ref: "#/definitions/onprem_credentials"
          - $ref: "#/definitions/vsphere_credentials"
      numdeployments:
        type: integer
        x-omitempty: false
  deployment:
    type: object
    required:
      - name
      - source_image
      - enable_high_availability
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
        minLength: 1
      source_image:
        $ref: "#/definitions/arcedge_image"
        readOnly: true
      latest_available_image:
        $ref: "#/definitions/arcedge_image"
        readOnly: true
      upgrade_available:
        type: boolean
        readOnly: true
      name:
        type: string
        minLength: 1
      credentials_id:
        type: string
        readOnly: true
      credential_name:
        type: string
        minLength: 1
      enable_high_availability:
        type: boolean
      enable_private_subnet:
        type: boolean
      arc_orch_ip:
        type: string
        minLength: 1
      action:
        type: string
      status:
        type: string
      status_id:
        type: integer
      arcedgeA_system_name:
        type: string
        readOnly: true
      arcedgeB_system_name:
        type: string
        readOnly: true
      arcedgeA_role:
        $ref: "#/definitions/arcedge_role"
      arcedgeB_role:
        $ref: "#/definitions/arcedge_role"
      arcedgeA_status:
        type: string
      arcedgeB_status:
        type: string
      arcedgeA_status_id:
        type: integer
      arcedgeB_status_id:
        type: integer
      arcedgeA_ip:
        type: string
      active_ip_gateway:
        type: string
      arcedgeA_private_ip:
        type: string
      arcedgeB_ip:
        type: string
      arcedgeB_private_ip:
        type: string
      private_cidr:
        type: string
      ingress_sg:
        type: string
      hubNumber:
        type: integer
      adminPassword:
        type: string
      coordinates:
        $ref: "#/definitions/coordinates"
      aws_deployment:
        $ref: "#/definitions/aws_deployment"
      azure_deployment:
        $ref: "#/definitions/azure_deployment"
      gcp_deployment:
        $ref: "#/definitions/gcp_deployment"
      oci_deployment:
        $ref: "#/definitions/oci_deployment"
      onprem_deployment:
        $ref: "#/definitions/onprem_deployment"
      vsphere_deployment:
        $ref: "#/definitions/vsphere_deployment"
      provider:
        $ref: "#/definitions/Providers"
      credentials:
        allOf:
          - $ref: "#/definitions/aws_credentials"
          - $ref: "#/definitions/azure_credentials"
          - $ref: "#/definitions/gcp_credentials"
          - $ref: "#/definitions/oci_credentials"
          - $ref: "#/definitions/onprem_credentials"
          - $ref: "#/definitions/vsphere_credentials"
      active_network_interfaces:
        readOnly: true
        type: array
        items:
          $ref: "#/definitions/network_interface"
      backup_network_interfaces:
        readOnly: true
        type: array
        items:
          $ref: "#/definitions/network_interface"
  aws_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      access_key:
        type: string
        minLength: 8
      secret_key:
        type: string
        minLength: 8
  azure_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      azure_subscription_id:
        type: string
        minLength: 8
      azure_client_id:
        type: string
        minLength: 8
      azure_client_secret:
        type: string
        minLength: 8
      azure_tenant_id:
        type: string
        minLength: 8
  gcp_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      type:
        type: string
        minLength: 1
      project_id:
        type: string
        minLength: 1
      private_key_id:
        type: string
        minLength: 1
      private_key:
        type: string
        minLength: 1
      client_email:
        type: string
        minLength: 1
      client_id:
        type: string
        minLength: 1
      auth_uri:
        type: string
        minLength: 1
      token_uri:
        type: string
        minLength: 1
      auth_provider_x509_cert_url:
        type: string
        minLength: 1
      client_x509_cert_url:
        type: string
        minLength: 1
  oci_credentials:
    type: object
    properties:
      user:
        type: string
        minLength: 1
      identity_domain:
        type: string
        minLength: 1
      fingerprint:
        type: string
        minLength: 1
        readOnly: true
        x-isnullable: true
      tenancy:
        type: string
        minLength: 1
      region:
        type: string
        minLength: 1
      key_file:
        type: string
        minLength: 1
        x-isnullable: true
  onprem_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      server_ip:
        type: string
        minLength: 1
      domain:
        type: string
        minLength: 1
      user_name:
        type: string
        minLength: 1
      ssh_key:
        type: string
        minLength: 1
      data_if_name:
        type: array
        items:
          type: string
      site_address:
        type: string
      coordinates:
        $ref: "#/definitions/coordinates"
  vsphere_credentials:
    type: object
    properties:
      id:
        type: string
        minLength: 1
      vsphere_server_ip:
        type: string
        minLength: 1
      vsphere_domain:
        type: string
        minLength: 1
      vsphere_username:
        type: string
        minLength: 1
      vsphere_password:
        type: string
        minLength: 1
      vsphere_site_address:
        type: string
      vsphere_coordinates:
        $ref: "#/definitions/coordinates"
  subnet:
    type: object
    required:
      - subnet_id
      - tags
    properties:
      arn:
        type: string
        minLength: 1
      subnet_id:
        type: string
        minLength: 1
      zone:
        type: string
      route_table_id:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/tag"
  tag:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        minLength: 1
      value:
        type: string
        minLength: 1
  byoip:
    type: object
    required:
      - eip
      - tags
    properties:
      eip:
        type: string
        minLength: 1
      tags:
        type: array
        items:
          $ref: "#/definitions/tag"
  vpc:
    type: object
    required:
      - vpc_id
      - tags
    properties:
      vpc_id:
        type: string
        minLength: 1
      tags:
        type: array
        items:
          $ref: "#/definitions/tag"
  login_request:
    type: object
    required:
      - tenant
      - username
      - password
    properties:
      tenant:
        type: string
        minLength: 1
      username:
        type: string
        minLength: 1
      password:
        type: string
        minLength: 1
  login_response:
    type: object
    required:
      - access_token
      - refresh_token
    properties:
      access_token:
        type: string
        minLength: 1
      refresh_token:
        type: string
        minLength: 1
  password_change_request:
    type: object
    required:
      - userlogin
      - newpassword
    properties:
      userlogin:
        $ref: "#/definitions/login_request"
      newpassword:
        type: string
        minLength: 1
  password_change_response:
    type: object
    required:
      - user
    properties:
      user:
        $ref: "#/definitions/user"

  success_response:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
  user:
    type: object
    required:
      - username
      - password
      - email
      - roles
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      username:
        type: string
        minLength: 1
      name:
        type: string
        minLength: 1
      saml_username:
        type: string
      password:
        type: string
      email:
        type: string
        minLength: 1
      is_default:
        type: boolean
        readOnly: true
        x-omitempty: false
      is_default_password:
        type: boolean
        readOnly: true
        x-omitempty: false
      roles:
        type: array
        items: { $ref: "#/definitions/rolename" }

  coordinates:
    type: object
    required:
      - lat
      - long
    properties:
      lat:
        type: number
      long:
        type: number
  aws_deployment:
    type: object
    properties:
      instance_key:
        type: string
        minLength: 1
      region:
        type: string
        minLength: 1
      zone:
        type: string
        minLength: 1
      backup_zone:
        type: string
      byoip:
        type: string
        minLength: 1
      byoip_backup:
        type: string
        minLength: 1
      vpc_id:
        type: string
        minLength: 1
      vpc_cidr_block:
        type: string
        minLength: 1
      instance_type:
        type: string
        minLength: 1
      assign_public_ip:
        type: boolean
      networks:
        type: array
        items: { $ref: "#/definitions/aws_network" }
        uniqueItems: true
        minItems: 1
  azure_deployment:
    type: object
    properties:
      resource_group:
        type: string
        minLength: 1
      instance_key:
        $ref: "#/definitions/instance_key"
      region:
        type: string
        minLength: 1
      zone:
        type: string
      backup_zone:
        type: string
      byoip:
        type: string
        minLength: 1
      byoip_backup:
        type: string
        minLength: 1
      vnet:
        type: string
      enable_accelerated_networking:
        type: boolean
      accelerated_networking_enabled:
        type: boolean
      instance_type:
        type: string
        minLength: 1
      assign_public_ip:
        type: boolean
      networks:
        type: array
        items: { $ref: "#/definitions/azure_network" }
        uniqueItems: true
        minItems: 1

  gcp_deployment:
    type: object
    properties:
      instance_key:
        $ref: "#/definitions/instance_key"
      region:
        type: string
        minLength: 1
      zone:
        type: string
        minLength: 1
      backup_zone:
        type: string
      byoip:
        type: string
        minLength: 1
      byoip_backup:
        type: string
        minLength: 1
      instance_type:
        type: string
        minLength: 1
      assign_public_ip:
        type: boolean
      network_tags:
        type: array
        items:
          type: string
          uniqueItems: true
          maxItems: 64
          minLength: 1
          maxLength: 63
      networks:
        type: array
        items: { $ref: "#/definitions/gcp_network" }
        uniqueItems: true
        minItems: 1

  oci_deployment:
    type: object
    properties:
      ssh_authorized_keys:
        $ref: "#/definitions/instance_key"
      region:
        type: string
        minLength: 1
      availability_domain:
        type: string
        minLength: 1
      backup_availability_domain:
        type: string
      compartment:
        type: string
        minLength: 1
      image_compartment:
        type: string
        minLength: 1
      compute_shape:
        type: string
        minLength: 1
      compute_cpus:
        type: string
        minLength: 1
      compute_memory_in_gbs:
        type: string
        minLength: 1
      enable_firewall:
        type: boolean
        x-isnullable: true
      byoip:
        type: string
        minLength: 1
      byoip_backup:
        type: string
        minLength: 1
      ha_dynamic_group:
        type: string
      networks:
        type: array
        items: { $ref: "#/definitions/oci_network" }

  onprem_deployment:
    type: object
    properties:
      vm_count:
        type: integer
      vcpus:
        type: integer
      vm_memory:
        type: integer
      prefix:
        type: string
      ssh_psw:
        type: string
      public_ip:
        type: string
      private_ip:
        type: string
      public_ip_backup:
        type: string
      private_ip_backup:
        type: string
        minLength: 1
      assign_public_ip:
        type: boolean
      networks:
        type: array
        items: { $ref: "#/definitions/kvm_network" }
  vsphere_deployment:
    type: object
    properties:
      vsphere_uuid:
        type: string
      datacenter:
        type: string
        minLength: 1
      vspherehost:
        type: string
        minLength: 1
      datastore:
        type: string
        minLength: 1
      cluster:
        type: string
        minLength: 1
      content_library:
        type: string
        minLength: 1
      vcpus:
        type: integer
      vm_memory:
        type: integer
      disk_size:
        type: integer
      private_ip:
        type: string
        minLength: 1
      public_ip:
        type: string
        minLength: 1
      networks:
        type: array
        items: { $ref: "#/definitions/vsphere_network" }
      ssh_psw:
        type: string
      subnet_mask:
        type: integer
      default_gw:
        type: string
        minLength: 1
      assign_public_ip:
        type: boolean
      admin_ssh_public_key:
        $ref: "#/definitions/instance_key"
  azure_instance_type:
    type: object
    required:
      - name
      - accelerated_networking_enabled
    properties:
      name:
        type: string
      accelerated_networking_enabled:
        type: boolean
      maximum_network_interfaces:
        type: integer
  instance_key:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      content:
        type: string
  tenant:
    type: object
    required:
      - name
      - defaultuser
      - domain
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
        minLength: 1
      organization:
        type: string
        minLength: 1
      domain:
        type: string
        minLength: 1
      defaultuser:
        $ref: "#/definitions/user"
      numdeployments:
        type: integer
        readOnly: true
        x-omitempty: false
      numconnections:
        type: integer
        readOnly: true
        x-omitempty: false
      is_default:
        type: boolean
        readOnly: true
        x-omitempty: false
      saml:
        $ref: "#/definitions/saml_config"

  terraform_log:
    type: object
    properties:
      id:
        type: string
      deployment_id:
        type: string
        minLength: 1
      deployment_name:
        type: string
        minLength: 1
      time:
        type: string
        minLength: 1
      operation:
        type: string
      initiator:
        type: string
      log:
        type: string
        readOnly: true

  permission:
    type: object
    additionalProperties:
      $ref: "#/definitions/access"

  role:
    type: object
    required:
      - name
      - resourceperms
    properties:
      id:
        type: string
        minLength: 1
      name:
        $ref: "#/definitions/rolename"
      resourceperms:
        type: array
        items: { $ref: "#/definitions/permission" }
  rolename:
    type: string
    enum: [ArcOrchAdmin, TenantAdmin, TenantOperator, DashboardReader]
  access:
    type: string
    enum: [r, rw]
  resource:
    type: string
    enum:
      [
        tenants,
        users,
        passwords,
        cloud_credentials,
        deployments,
        connections,
        arcedge_credentials,
        certificates,
        dns,
        upgrade,
        cloud_resources,
        fqdnlist,
        activefqdnlists,
        trusteddns,
        discoveredfqdns,
        fqdndiscovery,
        zerotrust,
        globaldashboard,
        tenantdashboard,
        auditlogs,
        arccost,
        arcorchapikey,
        samlconfg,
      ]
  arcorch_version:
    type: object
    properties:
      version:
        type: string
      platform:
        type: string
      domain:
        type: string
  arcedge_role:
    type: string
    enum: [active, backup, none]
  arcedge_name:
    type: string
    enum: [A, B, None]

  error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  upgrade_check:
    type: object
    required:
      - available
    properties:
      available:
        type: boolean
      currentVersion:
        type: string
      currentImage:
        type: string
      latestVersion:
        type: string
      latestImage:
        type: string
  upgrade:
    type: object
    required:
      - status
    properties:
      status:
        type: boolean
      statusMessage:
        type: string
      currentVersion:
        type: string
      currentImageName:
        type: string
      currentImageId:
        type: string
      latestVersion:
        type: string
      latestImageName:
        type: string
      latestImageId:
        type: string
  server_status:
    type: object
    properties:
      status:
        type: string
        enum: [running, upgrading]
  backup_config:
    type: object
    required:
      - use_default
      - provider
      - credentials
    properties:
      backup_id:
        type: string
        minLength: 1
        readOnly: true
        #format: ObjectId
        #x-go-custom-tag: bson:"_id, omitempty"
      use_default:
        type: boolean
        x-omitempty: false
      provider:
        type: string
      credentials:
        allOf:
          - $ref: "#/definitions/aws_backup"
          - $ref: "#/definitions/onprem_backup"
  aws_backup:
    type: object
    properties:
      access_key:
        type: string
        minLength: 8
      secret_key:
        type: string
        minLength: 8
      region:
        type: string
        minLength: 8
      s3_bucket:
        type: string
  onprem_backup:
    type: object
    properties:
      server_ip:
        type: string
        minLength: 1
      user_name:
        type: string
        minLength: 1
      ssh_key:
        type: string
        minLength: 1
      backup_location:
        type: string
  restore_config:
    type: object
    required:
      - use_default
      - provider
      - credentials
      - filename
    properties:
      use_default:
        type: boolean
        x-omitempty: false
      provider:
        type: string
      filename:
        type: string
        minLength: 1
      credentials:
        allOf:
          - $ref: "#/definitions/aws_backup"
          - $ref: "#/definitions/onprem_backup"
  cloud_resources:
    type: object
    required:
      - provider
      - resource_config
      - credential_id
      - customer_prefix_id
      - cloud_region
    properties:
      provider:
        $ref: "#/definitions/Providers"
      credential_id:
        # Cloud account credentials
        type: string
        minLength: 1
      customer_prefix_id:
        # Customer prefix ID to identify resources
        type: string
        minLength: 1
      cloud_region:
        type: string
        minLength: 1
      cloud_subregion:
        type: string
      resource_config:
        allOf:
          - $ref: "#/definitions/aws_cloud_resources_config"
          - $ref: "#/definitions/gcp_cloud_resources_config"
          - $ref: "#/definitions/azure_cloud_resources_config"
  aws_cloud_resources_config:
    type: object
    properties:
      vpc:
        type: object
        properties:
          subnet:
            type: string
            minLength: 1
          cidr:
            type: string
            minLength: 1
      direct_connect:
        type: object
        required:
          - amazon_side_asn
        properties:
          hosted_connection_id:
            type: string
            minLength: 8
          accept_hosted_connection:
            type: boolean
            x-omitempty: false
          direct_connect_gateway:
            type: boolean
            x-omitempty: false
          amazon_side_asn:
            type: integer
      vif:
        type: object
        required:
          - address_family
        properties:
          vlan_id:
            type: integer
            minimum: 1
            maximum: 4096
          address_family:
            type: string
            enum: [ipv4, ipv6]
          bgp_asn:
            type: integer
          amazon_address:
            type: string
            minLength: 1
          customer_address:
            type: string
            minLength: 1
  gcp_cloud_resources_config:
    type: object
    properties:
      gcp_network:
        type: object
        properties:
          auto_create:
            type: boolean
            x-omitempty: false
          subnet:
            type: string
            minLength: 8
      gcp_router:
        type: object
        required:
          - peer_asn
        properties:
          peer_asn:
            type: integer
          disable_peer_asn_config:
            type: boolean
            x-omitempty: false
  azure_cloud_resources_config:
    type: object
    properties:
      network:
        type: object
        properties:
          cidr:
            type: string
            minLength: 8
          gateway_subnet:
            type: string
            minLength: 8
      gateway:
        type: object
        properties:
          vpn_type:
            type: string
            enum:
              - "RouteBased"
              - "PolicyBased"
            # default: 'RouteBased'
            # x-omitempty: false
          sku:
            type: string
            enum:
              - "Basic"
              - "Standard"
              - "HighPerformance"
              - "UltraPerformance"
              - "ErGw1AZ"
              - "ErGw2AZ"
              - "ErGw3AZ"
              - "VpnGw1"
              - "VpnGw2"
              - "VpnGw3"
              - "VpnGw4"
              - "VpnGw1AZ"
              - "VpnGw2AZ"
              - "VpnGw3AZ"
              - "VpnGw4AZ"
              - "VpnGw5AZVpnGw5"
            # default: 'Standard'
            x-omitempty: false
          active_active:
            type: boolean
            x-omitempty: false
          enable_bgp:
            type: boolean
            x-omitempty: false
      express_route_circuit:
        type: object
        properties:
          provisioned:
            type: boolean
          service_provider:
            type: string
          peering_location:
            type: string
          bandwidth:
            type: integer
          sku_tier:
            type: string
            enum: [Basic, Local, Standard, Premium]
            # default: Standard
          sku_family:
            type: string
            enum: [MeteredData, UnlimitedData]
            #default: MeteredData
          peering:
            type: object
            properties:
              peer_asn:
                type: integer
              vlan_id:
                type: integer
              primary_peer_address_prefix:
                type: string
              secondary_peer_address_prefix:
                type: string
  cloud_resources_output:
    type: object
    properties:
      id:
        type: string
      provider:
        $ref: "#/definitions/Providers"
      deployed_config:
        $ref: "#/definitions/cloud_resources"
      resource_state:
        allOf:
          - $ref: "#/definitions/aws_cloud_resources_state_list"
          - $ref: "#/definitions/gcp_cloud_resources_state_list"
          - $ref: "#/definitions/azure_cloud_resources_state_list"
      last_updated:
        type: string
      status:
        $ref: "#/definitions/Status"
      operation:
        $ref: "#/definitions/TerraformOperation"
      last_error:
        type: string
  terraform_resource:
    type: object
    properties:
      state:
        type: boolean
      id:
        type: string
      name:
        type: string
  aws_cloud_resources_state_list:
    type: object
    properties:
      aws_vpc:
        type: string
      aws_vpn_gateway:
        type: string
      aws_route_table:
        type: string
      aws_vpn_gateway_route_propagation:
        type: string
      aws_subnet:
        type: string
      aws_dx_private_virtual_interface:
        type: string
      aws_dx_gateway:
        type: string
      aws_dx_gateway_assocation:
        type: string
      amazon_bgp_address:
        type: string
      amazon_side_asn:
        type: string
      customer_bgp_address:
        type: string
      customer_bgp_asn:
        type: string
  gcp_cloud_resources_state_list:
    type: object
    properties:
      gcp_vpc:
        type: string
      gcp_subnet:
        type: string
      gcp_router:
        type: string
      gcp_vlan_attachments:
        type: object
        properties:
          num_attachments:
            type: integer
          attachments_list:
            type: array
            items:
              properties:
                id:
                  type: string
                pairing_key:
                  type: string
                cloud_router_ip:
                  type: string
                customer_router_ip:
                  type: string
  azure_cloud_resources_state_list:
    type: object
    properties:
      resource_group:
        type: string
      route_table:
        type: string
      virtual_network:
        type: string
      gateway_subnet:
        type: string
      route_association:
        type: string
      public_ip:
        type: object
        properties:
          id:
            type: string
          address:
            type: string
      gateway:
        type: object
        properties:
          id:
            type: string
          connection_id:
            type: string
      express_route_circuit:
        type: object
        properties:
          id:
            type: string
          service_key:
            type: string
          auth_id:
            type: string
          peering_id:
            type: string
  fqdn:
    type: string
  booleantype:
    type: string
    enum: &booleanvalues
      - "true"
      - "false"
  fqdnlistname:
    type: string
  fqdnlist:
    type: object
    required:
      - name
      - fqdnlist
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
        minLength: 1
      time:
        type: integer
      is_default:
        type: boolean
        readOnly: true
        x-omitempty: false
      fqdnlist:
        type: array
        items: { $ref: "#/definitions/fqdn" }
  activefqdnlists:
    type: object
    required:
      - fqdnlistnames
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      fqdnlistnames:
        type: array
        items: { $ref: "#/definitions/fqdnlistname" }
      time:
        type: integer
  dnsip:
    type: string
  dnslist:
    type: object
    required:
      - name
      - dnslist
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
        minLength: 1
      is_default:
        type: boolean
        readOnly: true
        x-omitempty: false
      dnslist:
        type: array
        items: { $ref: "#/definitions/dnsip" }
  discoveredfqdns:
    type: object
    required:
      - name
      - fqdnlist
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
        minLength: 1
      time:
        type: integer
      fqdnlist:
        type: array
        items: { $ref: "#/definitions/fqdn" }
  fqdndiscovery:
    type: object
    required:
      - start
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      start:
        type: boolean
        readOnly: true
        x-omitempty: false
      time:
        type: integer
  zerotrust:
    type: object
    required:
      - enable
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      enable:
        type: boolean
        readOnly: true
        x-omitempty: false
  arcedge_image:
    type: object
    required:
      - image_id
    properties:
      version:
        type: string
      image_id:
        type: string
      provider:
        $ref: "#/definitions/Providers"
      name:
        type: string
  arcedge_upgrade_response:
    type: object
    required:
      - status
    properties:
      status:
        type: boolean
      currentImage:
        $ref: "#/definitions/arcedge_image"
      targetImage:
        $ref: "#/definitions/arcedge_image"
  arcedge_upgrade_available_response:
    type: object
    required:
      - available
    properties:
      available:
        type: boolean
      currentImage:
        $ref: "#/definitions/arcedge_image"
      targetImage:
        $ref: "#/definitions/arcedge_image"
  oci_compartment:
    type: object
    properties:
      name:
        type: string
      ocid:
        type: string
  oci_availability_domain:
    type: object
    properties:
      name:
        type: string
      ocid:
        type: string
  oci_virtual_network:
    type: object
    properties:
      name:
        type: string
      ocid:
        type: string
  oci_network:
    type: object
    properties:
      subnet_name:
        type: string
      vcn_ocid:
        type: string
      vcn_name:
        type: string
      subnet_ocid:
        type: string
      subnet_access:
        type: string
        enum: [public, private]
  oci_compute_shape:
    type: object
    properties:
      name:
        type: string
      ocpus:
        type: number
      memory_in_gbs:
        type: number
        format: float32
      is_flexible:
        type: boolean
      default_if_per_ocpu:
        type: integer
        x-isnullable: true
      min_ocpus:
        type: number
        x-isnullable: true
      max_ocpus:
        type: number
        x-isnullable: true
      min_memory_in_gbs:
        type: number
        x-isnullable: true
      max_memory_in_gbs:
        type: number
        x-isnullable: true
      max_vnic_attachments:
        type: integer
        x-isnullable: true
  tenantdashboard:
    type: object
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      numaccounts:
        type: integer
        readOnly: true
        x-omitempty: false
      numadmins:
        type: integer
        readOnly: true
        x-omitempty: false
      numoperators:
        type: integer
        readOnly: true
        x-omitempty: false
      numconnections:
        type: integer
        readOnly: true
        x-omitempty: false
      numdeployments:
        type: integer
        readOnly: true
        x-omitempty: false
      deployments:
        type: array
        readOnly: true
        x-omitempty: false
        items: { $ref: "#/definitions/deploymentname" }
      connections:
        type: array
        readOnly: true
        x-omitempty: false
        items: { $ref: "#/definitions/connectionname" }
  globaldashboard:
    type: object
    properties:
      id:
        type: string
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      numadmins:
        type: integer
        readOnly: true
        x-omitempty: false
      numoperators:
        type: integer
        readOnly: true
        x-omitempty: false
      numdeployments:
        type: integer
        readOnly: true
        x-omitempty: false
      numclouddeployments:
        type: integer
        readOnly: true
        x-omitempty: false
      numonpremdeployments:
        type: integer
        readOnly: true
        x-omitempty: false
      numupgradesavailable:
        type: integer
        readOnly: true
        x-omitempty: false
      arcedgeversions:
        type: array
        readOnly: true
        x-omitempty: false
        items:
          type: string

  connectionname:
    type: string
  deploymentname:
    type: string

  audit_event:
    type: object
    properties:
      _id:
        type: string
        format: ObjectId
      timestamp:
        type: integer
      userid:
        type: string
      username:
        type: string
      userrole:
        $ref: "#/definitions/rolename"
      resource:
        type: string
        enum:
          [
            tenants,
            users,
            cloud_credentials,
            deployments,
            upgrade,
            cloud_resources,
          ]
      operation:
        type: string
      status:
        type: string
        enum: [success, failed]
      details:
        type: string
  aws_network:
    type: object
    properties:
      name:
        type: string
      subnetA:
        type: string
      subnetB:
        type: string
      private_subnet_route_table:
        type: string
        minLength: 1
  aws_instance_type:
    type: object
    properties:
      instance_type:
        type: string
      maximum_network_interfaces:
        type: integer
  azure_network:
    type: object
    properties:
      name:
        type: string
      subnetwork:
        type: string
  gcp_network:
    type: object
    properties:
      name:
        type: string
      project:
        type: string
      network:
        type: string
      subnetwork:
        type: string
  vsphere_network:
    type: object
    properties:
      name:
        type: string
        minLength: 1
      adapter_type:
        type: string
        enum: [e1000, e1000e, vmxnet3, sriov]
      physical_function:
        $ref: "#/definitions/vsphere_physical_function"
  vsphere_physical_function:
    type: object
    properties:
      device:
        type: string
      pci:
        type: string
  gcp_instance_type:
    type: object
    properties:
      instance_type:
        type: string
      vCPUs:
        type: integer
      vNICs:
        type: integer
  kvm_network:
    type: object
    properties:
      name:
        type: string
      private_ip_default_gw:
        type: string
      private_ip_cidr_mask:
        type: string
      network:
        type: string
  network_interface:
    type: object
    properties:
      name:
        type: string
      private_ipv4_address:
        type: string
      public_ipv4_address:
        type: string
      linklocal_ipv6_address:
        type: string
      global_ipv6_address:
        type: string
      mac_address:
        type: string
      adapter_type:
        type: string
      private_ipv4_pfxlen:
        type: integer
      private_ipv4_cidr:
        type: string
      private_ipv4_gateway:
        type: string
      public_ipv4_pfxlen:
        type: integer
      linklocal_ipv6_pfxlen:
        type: integer
      global_ipv6_pfxlen:
        type: integer
      aws_interface:
        $ref: "#/definitions/aws_interface"
      azure_interface:
        $ref: "#/definitions/azure_interface"
      oci_interface:
        $ref: "#/definitions/oci_interface"
      gcp_interface:
        $ref: "#/definitions/gcp_interface"
      vsphere_interface:
        $ref: "#/definitions/vsphere_interface"

  gcp_interface:
    type: object
    properties:
      interface_id:
        type: string
      network:
        type: string
      subnetwork:
        type: string
      route_name:
        type: string
  aws_interface:
    type: object
    properties:
      # network interface id
      interface_id:
        type: string
      route_table_id:
        type: string
      subnet_id:
        type: string
      security_groups:
        type: array
        items:
          type: string
  azure_interface:
    type: object
    properties:
      # network interface id
      interface_id:
        type: string
      route_table_name:
        type: string
  oci_interface:
    type: object
    properties:
      # vnic ocid
      vnic_id:
        type: string
      network:
        $ref: "#/definitions/oci_network"
      # public ip ocid
      public_ip_id:
        type: string
      # private ip ocid
      private_ip_id:
        type: string
      secondary_private_ip:
        type: string
      secondary_private_ip_id:
        type: string
      route_table_id:
        type: string
      network_security_groups:
        type: array
        items:
          type: string
# Add Tunnel config and ipsec config structures
  tunnel_interface:
    type: object
    properties:
      description:
        type: string
        minLength: 1
      mtu:
        type: integer
      ip_address:
        type: string
      prefix_length:
        type: integer
      tunnel_src_ip:
        type: string
      tunnel_dst_ip:
        type: string
      dscp_key:
        type: integer
      enabled:
        type: boolean
      tunnel_mode:
        type: string


  ipsec_pad:
    type: object
    properties:
      ip_address:
        type: string
      secret:
        type: string

  ipsec_conn:
    type: object
    properties:
      dh_group:
        type: integer
      spd_name:
        type: string
      local_subnet:
        type: string
      remote_subnet:
        type: string
      local_ip:
        type: string
      remote_ip:
        type: string
      spd_mark:
        type: integer
      enabled:
        type: boolean





  vsphere_interface:
    type: object
    properties:
      network:
        type: string

  # ArcCost microservice structures - BEGIN
  arc_cost_interfaces:
    type: object
    properties:
      interfaceId:
        type: string
      interfaceName:
        type: string
  arc_cost_device:
    type: object
    properties:
      hostName:
        type: string
      deviceIds:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: "#/definitions/arc_cost_interfaces"
  arc_cost_visibility_input:
    type: object
    properties:
      deploymentName:
        type: string
      interfaceNames:
        type: array
        items:
          type: string
      interfaceIds:
        type: array
        items:
          type: string
  arc_cost_visibility_request:
    type: object
    properties:
      deployments:
        type: array
        items:
          $ref: "#/definitions/arc_cost_visibility_input"
  arc_cost_usage_request:
    type: object
    properties:
      deployments:
        type: array
        items:
          $ref: "#/definitions/arc_cost_input"
  arc_cost_input:
    type: object
    properties:
      deploymentName:
        type: string
      region:
        type: string
      provider:
        type: string
      destinationRegion:
        type: string
      destinationCloudProvider:
        type: string
      instanceType:
        type: string
      interfaceNames:
        type: array
        items:
          type: string
      durationInHrs:
        type: integer
      maxHops:
        type: integer

  arc_cost_visibility_response:
    type: object
    properties:
      name:
        type: string
      devicesInfo:
        type: object
        additionalProperties:
          $ref: "#/definitions/arc_cost_device_info"
      instanceInfo:
        $ref: "#/definitions/arc_cost_instance_info"
      error:
        type: string

  arc_cost_usage_response:
    type: object
    properties:
      name:
        type: string
      devicesInfo:
        type: object
        additionalProperties:
          $ref: "#/definitions/arc_cost_device_info"
      completePriceFunction:
        type: array
        items:
          $ref: "#/definitions/arc_cost_price_function"
      instanceInfo:
        $ref: "#/definitions/arc_cost_instance_info"
      error:
        type: string
  arc_cost_device_info:
    type: object
    properties:
      interfaceId:
        type: string
      deviceId:
        type: string
      inOctets:
        type: number
        format: double
      outOctets:
        type: number
        format: double
      inOctectCost:
        type: number
        format: double
        readOnly: true
      outOctectCost:
        type: number
        format: double
        readOnly: true
      currencyCode:
        type: string
      dayOctetsInfo:
        $ref: "#/definitions/arc_cost_octets_info"
        readOnly: true
      weekOctetsInfo:
        $ref: "#/definitions/arc_cost_octets_info"
        readOnly: true
      monthOctetsInfo:
        $ref: "#/definitions/arc_cost_octets_info"
        readOnly: true
      omniInsight:
        type: string
      hourlyOctet:
        type: array
        items:
          $ref: "#/definitions/arc_cost_hourly_octet"
      activePriceFunction:
        $ref: "#/definitions/arc_cost_price_function"
        readOnly: true
      error:
        type: string

  arc_cost_octets_info:
    type: object
    properties:
      inOctets:
        type: number
        format: double
      outOctets:
        type: number
        format: double
      deltaInOctets:
        type: number
        format: double
      deltaOutOctets:
        type: number
        format: double
  arc_cost_price_function:
    type: object
    properties:
      beginRange:
        type: number
        format: double
      endRange:
        type: number
        format: double
      currencyCode:
        type: string
      pricePerUnit:
        type: number
        format: double
      unit:
        type: string
  arc_cost_instance_info:
    type: object
    properties:
      beginRange:
        type: string
      endRange:
        type: string
      memory:
        type: string
      pricePerUnit:
        type: string
      sku:
        type: string
      unit:
        type: string
      vCPU:
        type: string
      error:
        type: string

  arc_cost_hourly_octet:
    type: object
    properties:
      startTime:
        type: string
        x-go-type:
          type: Time
          import:
            package: time
            alias: hourly_octet_time
          hints:
            noValidation: true
      endTime:
        type: string
        x-go-type:
          type: Time
          import:
            package: time
            alias: hourly_octet_time
          hints:
            noValidation: true
      hourlyOutOctets:
        type: number
        format: double
      hourlyInOctets:
        type: number
        format: double
      inOctetCost:
        type: number
        format: double
      outOctetCost:
        type: number
        format: double
      currencyCode:
        type: string
  arc_cost_probe_entry:
    type: object
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      probename:
        type: string
      deployments:
        type: array
        items:
          $ref: "#/definitions/arc_cost_input"
  arc_cost_costcontrol_request:
    type: object
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
      deployments:
        type: array
        items:
          $ref: "#/definitions/arc_cost_costcontrol_input"
  arc_cost_costcontrol_input:
    type: object
    properties:
      deployment_name:
        type: string
      ae:
        $ref: "#/definitions/arcedge_name"
      interface_names:
        type: array
        items:
          type: string

  arc_cost_path_request:
    type: object
    properties:
      sourceCloudProvider:
        type: string
      sourceRegion:
        type: string
      destinationCloudProvider:
        type: string
      destinationRegion:
        type: string
      avoidProviders:
        type: array
        items:
          type: string
      avoidRegions:
        type: array
        items:
          type: string
      maxHops:
        type: number
        format: uint8
      requiredTopPaths:
        type: number
        format: uint8

  arc_cost_path_response:
    type: object
    properties:
      sourceRegion:
        type: string
      destinationRegion:
        type: string
      recommendedPaths:
        type: array
        items:
          $ref: "#/definitions/arc_cost_path"
  arc_cost_path:
    type: object
    properties:
      path:
        type: string
      totalCost:
        type: number
        format: double

  arc_cost_link:
    type: object
    properties:
      id:
        type: string
        minLength: 1
        readOnly: true
        format: ObjectId
        x-go-custom-tag: bson:"_id, omitempty"
        x-isnullable: true
      name:
        type: string
      link:
        $ref: "#/definitions/arc_cost_linkdata"

  arc_cost_linkdata:
    type: object
    properties:
      vertexA:
        $ref: "#/definitions/arc_cost_vertex"
      vertexB:
        $ref: "#/definitions/arc_cost_vertex"
      atobcost:
        type: number
        format: double
      btoacost:
        type: number
        format: double

  arc_cost_vertex:
    type: object
    properties:
      deployment_name:
        type: string
      ae:
        $ref: "#/definitions/arcedge_name"
      interface_name:
        type: string

  arc_costservice_link:
    type: object
    properties:
      name:
        type: string
      link:
        $ref: "#/definitions/arc_cost_service_linkdata"

  arc_cost_service_linkdata:
    type: object
    properties:
      vertexA:
        $ref: "#/definitions/arc_costservice_vertex"
      vertexB:
        $ref: "#/definitions/arc_costservice_vertex"
      atobcost:
        type: number
        format: double
      btoacost:
        type: number
        format: double

  arc_costservice_vertex:
    type: object
    properties:
      hostName:
        type: string
      interfaceName:
        type: string
      region:
        type: string
      provider:
        $ref: "#/definitions/Providers"

  saml_config:
    type: object
    properties:
      enable:
        type: boolean
      metadata_url:
        type: string
      entity_id:
        type: string
      saml_metadata:
        type: string
      cert_file:
        type: string
      key_file:
        type: string
      update_time:
        type: integer
        format: int64

  saml_users:
    type: object
    properties:
      users:
        type: array
        items:
          type: string
      roles:
        type: array
        items: { $ref: "#/definitions/rolename" }

  saml_users_resp:
    type: object
    properties:
      create:
        type: array
        items:
          type: string
      edit:
        type: array
        items:
          type: string

  arc_costservice_costmatrix:
    type: object
    properties:
      arc_costservice_costmatrix_entries:
        type: array
        items: 
           $ref: '#/definitions/arc_costservice_costmatrix_entry'
  arc_costservice_paths_request:
    type: object
    properties:
      sourceCloudProvider:
        type: string
      sourceRegion:
        type: string
      destinationCloudProvider:
        type: string
      destinationRegion:
        type: string
      avoidProviders:
        type: array
        items: 
           type: string
      avoidRegions:
        type: array
        items: 
           type: string
#       TODO => Change to the below format once ArcCost service changes the DS 
#      avoidRegions:
#        type: array
#        items: 
#           $ref: '#/definitions/arc_costservice_provider_regions'
      maxHops:
        type: integer
      requiredTopPaths:
        type: integer

  arc_costservice_paths_response:
    type: object
    properties:
      sourceCloudProvider:
        type: string
      sourceRegion:
        type: string
      destinationCloudProvider:
        type: string
      destinationRegion:
        type: string
      recommendedPaths:
        type: array
        items: 
           $ref: '#/definitions/arc_costservice_path'

  arc_costservice_path:
    type: object
    properties:
      path:
        type: string
      totalCost:
        type: number
        format: double

  arc_costservice_provider_regions:  
    type: object
    properties:
      provider:
        type: string
      providerRegion:
        type: array
        items: 
           type: string

  arc_costservice_costmatrix_entry:  
    type: object
    properties:
      sourceCsp:
        $ref: '#/definitions/ArcCostCsps'
      sourceRegion:
        type: string
      destCsp:
        $ref: '#/definitions/ArcCostCsps'
      destRegion:
        type: string
      sku:
        type: string
      usageType:
        type: string
      BeginRange:
        type: string
      EndRange:
        type: string
      Unit:
        type: string
      PricePerUnit:
        type: number
        format: double
      CurrencyCode:
        type: string
      Rank:
        type: integer
      description:
        type: string

  coordinateslonglat:  
    type: array
    items: 
        type: number

  arc_cost_region_coordinates:  
    type: object
    properties:
      CoordinateJson:
        $ref: '#/definitions/coordinates'
      Coordinate:
        $ref: '#/definitions/coordinateslonglat'

  arc_cost_region_request:
    type: object
    properties:
      csps:
        type: array
        items: 
           type: string


  arc_cost_region_response:
    type: object
    additionalProperties:
      $ref: '#/definitions/arc_cost_provider_regions'

  arc_cost_provider_regions:
    type: object
    additionalProperties:
      $ref: '#/definitions/arc_cost_provider_region_details'

  arc_cost_provider_region_details:
    type: array
    items:
      $ref: '#/definitions/arc_cost_provider_region_detail'

  arc_cost_provider_region_detail:
    type: object
    properties:
      RegionCode:
        type: string
      RegionName:
        type: string
      StandardInternetEgress:
        type: array
        items: 
          $ref: '#/definitions/arc_cost_standard_internet_egress'

  arc_cost_standard_internet_egress:
    type: object
    properties:
        beginRange:
          type: number
        endRange:
          type: number
        currencyCode:
          type: string
        pricePerUnit:
          type: number
          format: double
        unit:
          type: string

  arc_orch_config:
    type: object
    properties:
      features:
        type: array
        items: 
          $ref: '#/definitions/arc_orch_feature_config'
  arc_orch_status:
    type: object
    properties:
      version:
        type: string
      build:
        type: string
      installkey:  
        type: string
      features:
        type: array
        items: 
          $ref: '#/definitions/arc_orch_feature_config'
  arc_orch_tenant_config:
    type: object
    properties:
      features:
        type: array
        items: 
          $ref: '#/definitions/arc_orch_feature_config'
  arc_orch_tenant_status:
    type: object
    properties:
      features:
        type: array
        items: 
          $ref: '#/definitions/arc_orch_feature_config'
  arc_orch_feature_config:          
    type: object
    properties:
      name:
        type: string
      config:
        type: object
  arc_orch_api_key_request:
    type: object
    properties:
      name:
        type: string
      expireDate:
        type: integer
  arc_orch_api_key_response:
    type: object
    properties:
      name:
        type: string
      expireDate:
        type: integer
      apikey:
        type: string

  stringarraydict:
    type: object
    additionalProperties:
      type: array
      items:
        type: string
