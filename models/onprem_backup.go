// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OnpremBackup onprem backup
//
// swagger:model onprem_backup
type OnpremBackup struct {

	// backup location
	BackupLocation string `json:"backup_location,omitempty"`

	// server ip
	// Min Length: 1
	ServerIP string `json:"server_ip,omitempty"`

	// ssh key
	// Min Length: 1
	SSHKey string `json:"ssh_key,omitempty"`

	// user name
	// Min Length: 1
	UserName string `json:"user_name,omitempty"`
}

// Validate validates this onprem backup
func (m *OnpremBackup) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateServerIP(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSSHKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OnpremBackup) validateServerIP(formats strfmt.Registry) error {
	if swag.IsZero(m.ServerIP) { // not required
		return nil
	}

	if err := validate.MinLength("server_ip", "body", m.ServerIP, 1); err != nil {
		return err
	}

	return nil
}

func (m *OnpremBackup) validateSSHKey(formats strfmt.Registry) error {
	if swag.IsZero(m.SSHKey) { // not required
		return nil
	}

	if err := validate.MinLength("ssh_key", "body", m.SSHKey, 1); err != nil {
		return err
	}

	return nil
}

func (m *OnpremBackup) validateUserName(formats strfmt.Registry) error {
	if swag.IsZero(m.UserName) { // not required
		return nil
	}

	if err := validate.MinLength("user_name", "body", m.UserName, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this onprem backup based on context it is used
func (m *OnpremBackup) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OnpremBackup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OnpremBackup) UnmarshalBinary(b []byte) error {
	var res OnpremBackup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
