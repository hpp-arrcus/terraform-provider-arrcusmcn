// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ArcedgeRole arcedge role
//
// swagger:model arcedge_role
type ArcedgeRole string

func NewArcedgeRole(value ArcedgeRole) *ArcedgeRole {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ArcedgeRole.
func (m ArcedgeRole) Pointer() *ArcedgeRole {
	return &m
}

const (

	// ArcedgeRoleActive captures enum value "active"
	ArcedgeRoleActive ArcedgeRole = "active"

	// ArcedgeRoleBackup captures enum value "backup"
	ArcedgeRoleBackup ArcedgeRole = "backup"

	// ArcedgeRoleNone captures enum value "none"
	ArcedgeRoleNone ArcedgeRole = "none"
)

// for schema
var arcedgeRoleEnum []interface{}

func init() {
	var res []ArcedgeRole
	if err := json.Unmarshal([]byte(`["active","backup","none"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		arcedgeRoleEnum = append(arcedgeRoleEnum, v)
	}
}

func (m ArcedgeRole) validateArcedgeRoleEnum(path, location string, value ArcedgeRole) error {
	if err := validate.EnumCase(path, location, value, arcedgeRoleEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this arcedge role
func (m ArcedgeRole) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateArcedgeRoleEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this arcedge role based on context it is used
func (m ArcedgeRole) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
