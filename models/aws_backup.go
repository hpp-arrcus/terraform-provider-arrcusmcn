// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AwsBackup aws backup
//
// swagger:model aws_backup
type AwsBackup struct {

	// access key
	// Min Length: 8
	AccessKey string `json:"access_key,omitempty"`

	// region
	// Min Length: 8
	Region string `json:"region,omitempty"`

	// s3 bucket
	S3Bucket string `json:"s3_bucket,omitempty"`

	// secret key
	// Min Length: 8
	SecretKey string `json:"secret_key,omitempty"`
}

// Validate validates this aws backup
func (m *AwsBackup) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccessKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecretKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AwsBackup) validateAccessKey(formats strfmt.Registry) error {
	if swag.IsZero(m.AccessKey) { // not required
		return nil
	}

	if err := validate.MinLength("access_key", "body", m.AccessKey, 8); err != nil {
		return err
	}

	return nil
}

func (m *AwsBackup) validateRegion(formats strfmt.Registry) error {
	if swag.IsZero(m.Region) { // not required
		return nil
	}

	if err := validate.MinLength("region", "body", m.Region, 8); err != nil {
		return err
	}

	return nil
}

func (m *AwsBackup) validateSecretKey(formats strfmt.Registry) error {
	if swag.IsZero(m.SecretKey) { // not required
		return nil
	}

	if err := validate.MinLength("secret_key", "body", m.SecretKey, 8); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this aws backup based on context it is used
func (m *AwsBackup) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AwsBackup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AwsBackup) UnmarshalBinary(b []byte) error {
	var res AwsBackup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
