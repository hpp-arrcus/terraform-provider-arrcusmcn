// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Upgrade upgrade
//
// swagger:model upgrade
type Upgrade struct {

	// current image Id
	CurrentImageID string `json:"currentImageId,omitempty"`

	// current image name
	CurrentImageName string `json:"currentImageName,omitempty"`

	// current version
	CurrentVersion string `json:"currentVersion,omitempty"`

	// latest image Id
	LatestImageID string `json:"latestImageId,omitempty"`

	// latest image name
	LatestImageName string `json:"latestImageName,omitempty"`

	// latest version
	LatestVersion string `json:"latestVersion,omitempty"`

	// status
	// Required: true
	Status *bool `json:"status"`

	// status message
	StatusMessage string `json:"statusMessage,omitempty"`
}

// Validate validates this upgrade
func (m *Upgrade) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Upgrade) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this upgrade based on context it is used
func (m *Upgrade) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Upgrade) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Upgrade) UnmarshalBinary(b []byte) error {
	var res Upgrade
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
