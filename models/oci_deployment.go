// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OciDeployment oci deployment
//
// swagger:model oci_deployment
type OciDeployment struct {

	// availability domain
	// Min Length: 1
	AvailabilityDomain string `json:"availability_domain,omitempty"`

	// backup availability domain
	BackupAvailabilityDomain string `json:"backup_availability_domain,omitempty"`

	// byoip
	// Min Length: 1
	Byoip string `json:"byoip,omitempty"`

	// byoip backup
	// Min Length: 1
	ByoipBackup string `json:"byoip_backup,omitempty"`

	// compartment
	// Min Length: 1
	Compartment string `json:"compartment,omitempty"`

	// compute cpus
	// Min Length: 1
	ComputeCpus string `json:"compute_cpus,omitempty"`

	// compute memory in gbs
	// Min Length: 1
	ComputeMemoryInGbs string `json:"compute_memory_in_gbs,omitempty"`

	// compute shape
	// Min Length: 1
	ComputeShape string `json:"compute_shape,omitempty"`

	// enable firewall
	EnableFirewall *bool `json:"enable_firewall,omitempty"`

	// ha dynamic group
	HaDynamicGroup string `json:"ha_dynamic_group,omitempty"`

	// image compartment
	// Min Length: 1
	ImageCompartment string `json:"image_compartment,omitempty"`

	// networks
	Networks []*OciNetwork `json:"networks"`

	// region
	// Min Length: 1
	Region string `json:"region,omitempty"`

	// ssh authorized keys
	SSHAuthorizedKeys *InstanceKey `json:"ssh_authorized_keys,omitempty"`
}

// Validate validates this oci deployment
func (m *OciDeployment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvailabilityDomain(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateByoip(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateByoipBackup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCompartment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateComputeCpus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateComputeMemoryInGbs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateComputeShape(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateImageCompartment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNetworks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSSHAuthorizedKeys(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OciDeployment) validateAvailabilityDomain(formats strfmt.Registry) error {
	if swag.IsZero(m.AvailabilityDomain) { // not required
		return nil
	}

	if err := validate.MinLength("availability_domain", "body", m.AvailabilityDomain, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateByoip(formats strfmt.Registry) error {
	if swag.IsZero(m.Byoip) { // not required
		return nil
	}

	if err := validate.MinLength("byoip", "body", m.Byoip, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateByoipBackup(formats strfmt.Registry) error {
	if swag.IsZero(m.ByoipBackup) { // not required
		return nil
	}

	if err := validate.MinLength("byoip_backup", "body", m.ByoipBackup, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateCompartment(formats strfmt.Registry) error {
	if swag.IsZero(m.Compartment) { // not required
		return nil
	}

	if err := validate.MinLength("compartment", "body", m.Compartment, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateComputeCpus(formats strfmt.Registry) error {
	if swag.IsZero(m.ComputeCpus) { // not required
		return nil
	}

	if err := validate.MinLength("compute_cpus", "body", m.ComputeCpus, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateComputeMemoryInGbs(formats strfmt.Registry) error {
	if swag.IsZero(m.ComputeMemoryInGbs) { // not required
		return nil
	}

	if err := validate.MinLength("compute_memory_in_gbs", "body", m.ComputeMemoryInGbs, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateComputeShape(formats strfmt.Registry) error {
	if swag.IsZero(m.ComputeShape) { // not required
		return nil
	}

	if err := validate.MinLength("compute_shape", "body", m.ComputeShape, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateImageCompartment(formats strfmt.Registry) error {
	if swag.IsZero(m.ImageCompartment) { // not required
		return nil
	}

	if err := validate.MinLength("image_compartment", "body", m.ImageCompartment, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateNetworks(formats strfmt.Registry) error {
	if swag.IsZero(m.Networks) { // not required
		return nil
	}

	for i := 0; i < len(m.Networks); i++ {
		if swag.IsZero(m.Networks[i]) { // not required
			continue
		}

		if m.Networks[i] != nil {
			if err := m.Networks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("networks" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("networks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OciDeployment) validateRegion(formats strfmt.Registry) error {
	if swag.IsZero(m.Region) { // not required
		return nil
	}

	if err := validate.MinLength("region", "body", m.Region, 1); err != nil {
		return err
	}

	return nil
}

func (m *OciDeployment) validateSSHAuthorizedKeys(formats strfmt.Registry) error {
	if swag.IsZero(m.SSHAuthorizedKeys) { // not required
		return nil
	}

	if m.SSHAuthorizedKeys != nil {
		if err := m.SSHAuthorizedKeys.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ssh_authorized_keys")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ssh_authorized_keys")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this oci deployment based on the context it is used
func (m *OciDeployment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateNetworks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSSHAuthorizedKeys(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OciDeployment) contextValidateNetworks(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Networks); i++ {

		if m.Networks[i] != nil {
			if err := m.Networks[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("networks" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("networks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *OciDeployment) contextValidateSSHAuthorizedKeys(ctx context.Context, formats strfmt.Registry) error {

	if m.SSHAuthorizedKeys != nil {
		if err := m.SSHAuthorizedKeys.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ssh_authorized_keys")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("ssh_authorized_keys")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OciDeployment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OciDeployment) UnmarshalBinary(b []byte) error {
	var res OciDeployment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
