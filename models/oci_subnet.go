// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OciSubnet oci subnet
//
// swagger:model oci_subnet
type OciSubnet struct {

	// name
	Name string `json:"name,omitempty"`

	// ocid
	Ocid string `json:"ocid,omitempty"`

	// subnet access
	// Enum: [public private]
	SubnetAccess string `json:"subnet_access,omitempty"`

	// vcn
	Vcn string `json:"vcn,omitempty"`

	// vcn name
	VcnName string `json:"vcn_name,omitempty"`
}

// Validate validates this oci subnet
func (m *OciSubnet) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSubnetAccess(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ociSubnetTypeSubnetAccessPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["public","private"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ociSubnetTypeSubnetAccessPropEnum = append(ociSubnetTypeSubnetAccessPropEnum, v)
	}
}

const (

	// OciSubnetSubnetAccessPublic captures enum value "public"
	OciSubnetSubnetAccessPublic string = "public"

	// OciSubnetSubnetAccessPrivate captures enum value "private"
	OciSubnetSubnetAccessPrivate string = "private"
)

// prop value enum
func (m *OciSubnet) validateSubnetAccessEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, ociSubnetTypeSubnetAccessPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *OciSubnet) validateSubnetAccess(formats strfmt.Registry) error {
	if swag.IsZero(m.SubnetAccess) { // not required
		return nil
	}

	// value enum
	if err := m.validateSubnetAccessEnum("subnet_access", "body", m.SubnetAccess); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this oci subnet based on context it is used
func (m *OciSubnet) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OciSubnet) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OciSubnet) UnmarshalBinary(b []byte) error {
	var res OciSubnet
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
